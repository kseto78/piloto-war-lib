<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:core="http://activemq.apache.org/schema/core" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://activemq.apache.org/schema/core http://activemq.org/config/1.0/1.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- <context:component-scan base-package="es.mpr" /> -->


	<!-- CONFIGURACIÓN CONEXION ACTIVEMQ -->

	<!-- Activemq connection factory -->
	<bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<!-- Constructor con solo brokerURL -->
		<!--  <constructor-arg index="0" value="tcp://10.253.114.219:61616" /> -->
		<!-- Constructor con autenticacion -->
		<property name="brokerURL" value="tcp://10.253.114.219:61616" />
		<property name="userName" value="sim" />
		<property name="password" value="glksgavmwa" />
		<property name="transactedIndividualAck" value="true" />
	</bean>

	<!-- JmsTemplate Definition -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="amqConnectionFactory" />
		<property name="receiveTimeout" value="200" />
		<property name="sessionAcknowledgeMode" value="0" />
		<!-- <property name="sessionTransacted" value="true" /> -->

	</bean>

	

	<!-- FIN CONFIGURACION CONEXION ACTIVEMQ -->


	<!-- GESTION DE TRANSACCIONES -->
	<bean id="txJMSManager"
		class="org.springframework.jms.connection.JmsTransactionManager">
		<property name="connectionFactory" ref="amqConnectionFactory" />
	</bean>

	<!-- <tx:annotation-driven transaction-manager="txManager" /> -->
	<tx:advice id="txJMSAdvise" transaction-manager="txJMSManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"
				rollback-for="java.lang.RuntimeException" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut
			expression="execution(* es.map.sim.jms.receiver.SIMMessageReceiver.*(..)) or execution(* org.springframework.jms.listener.DefaultMessageListenerContainer.*(..)) or execution(* org.springframework.jms.core.JmsTemplate.*(..)) or execution(* *.onMessage(..)) or execution(* *.*MessageListener.*(..)) or execution(* es.map.sim.jms.listener.adapter.ExceptionStrategyMessageListenerAdapter.*(..))"
			id="txJMSPointcut" />
		<aop:advisor advice-ref="txJMSAdvise" pointcut-ref="txJMSPointcut" />
	</aop:config>
	<!-- FIN GESTION DE TRANSACCIONES -->
	
	<bean name="queueResolver" class="es.map.sim.jms.QueueResolver">
		<property name="premiumQueueName" value="sim.premium" />
		<property name="refreshQueueName" value="sim.refreshStatus" />
		<property name="queueNamePrefix" value="sim.normal." />
		<property name="fallidosQueueName"  value="sim.dlq"/>
	</bean>

	<!-- LIMITAR REINTENTOS -->

	<bean name="simMaxRetriesProperty" class="java.lang.String">
		<constructor-arg value="SIM_MAX_RETRIES" />
	</bean>
	
	<!-- Configuración del Bean encargado de limitar los reintentos -->
	<bean name="limitRetriesStrategy" class="es.map.sim.jms.aspect.RetryLimitExceptionStrategy">
		<property name="limitQueue" value="#{queueResolver.fallidosQueueName}" />
		<property name="retriesProperty" ref="simMaxRetriesProperty" />
	</bean>

	<!-- FIN LIMITAR REINTENTOS -->

	<!-- DELAY PARA CONSUMIR MENSJES -->
		
	<bean name="simDeliveryDelayProperty" class="java.lang.String">
		<constructor-arg value="AMQ_SCHEDULED_DELAY" />
	</bean>
	
	<bean name="simDeliveryDelayValue" class="java.lang.Long">
		<constructor-arg value="1000" />
	</bean>
	
	<!-- FIN DELAY PARA CONSUMIR MENSJES -->
	
	<!-- INICIO CONFIGURACION GENERAL COMPONENTE JMS SIM -->
	<bean name="simMsgConverter"
		class="org.springframework.jms.support.converter.MappingJackson2MessageConverter">
		<property name="typeIdPropertyName" value="type" />
		<!-- <property name="typeIdMappings"> <map> <entry key="mensajeJMS" value="es.map.sim.negocio.modelo.MensajeJMS"/> 
			</map> </property> -->
	</bean>

	<bean name="messageSender" class="es.map.sim.jms.sender.SIMMessageSender">
		<property name="maxRetriesProperty" ref="simMaxRetriesProperty" />
		<property name="deliveryDelayProperty" ref="simDeliveryDelayProperty" />
		<property name="converter" ref="simMsgConverter" />
		<property name="deliveryDelay" ref="simDeliveryDelayValue" />
	</bean>

	<!-- <bean name="baseSIMMensajeListener" abstract="true"
		class="es.map.sim.jms.listener.adapter.ExceptionStrategyMessageListenerAdapter">
		<property name="messageConverter" ref="simMsgConverter" />
		<property name="excStrategy" ref="limitRetriesStrategy"></property>
	</bean> -->
	
	
	<!-- FIN CONFIGURACION GENERAL COMPONENTE JMS SIM -->
	
	<!-- INICIO CONFIGURACION GENERAL ENVIAR MENSAJE -->
	<!-- <bean name="enviarMensajeNegocio" class="es.minhap.plataformamensajeria.iop.business.SIMMessageDispatcher" />

	<bean name="enviarMensajeListener" parent="baseSIMMensajeListener">
		<property name="delegate" ref="enviarMensajeNegocio" />
		<property name="defaultListenerMethod" value="dispatchMessage" />
	</bean> -->
	
	<!-- FIN CONFIGURACION GENERAL ENVIAR MENSAJE -->
	
	<!-- CONFIGURACION LISTENER ENVIAR MENSAJE -->
	<!-- <jms:listener-container acknowledge="transacted"
		transaction-manager="txJMSManager" connection-factory="amqConnectionFactory"
		concurrency="10" destination-type="queue" receive-timeout="100">
		<jms:listener ref="enviarMensajeListener" destination="#{queueResolver.premiumQueueName}.>" />
	</jms:listener-container> -->
	
	<!-- CONFIGURACION RECEPCION SINCRONA ENVIAR MENSAJE --> 
	<!-- <bean name="enviarMensajeMessageReceiver" class="es.map.sim.jms.receiver.SIMMessageReceiver">
		<property name="listener" ref="enviarMensajeListener" />
	</bean> -->
	<!-- INICIO CONFIGURACION REFRESHSTATUS -->
	
	<!-- <bean name="refreshStatusNegocio" class="es.minhap.plataformamensajeria.iop.business.SIMRefreshStatusDispatcher" />

	<bean name="refreshStatusListener" parent="baseSIMMensajeListener">
		<property name="delegate" ref="refreshStatusNegocio" />
		<property name="defaultListenerMethod" value="dispatchMessage" />
	</bean>
	
	<jms:listener-container acknowledge="transacted"
		transaction-manager="txJMSManager" connection-factory="amqConnectionFactory"
		concurrency="10" destination-type="queue" receive-timeout="100">
		<jms:listener ref="refreshStatusListener" destination="#{queueResolver.refreshQueueName}" />
	</jms:listener-container> -->
	
<!-- FIN CONFIGURACION REFRESHSTATUS -->


<!-- INICIO CONFIGURACION MENSAJES FALLIDOS -->
	<!-- 
	<bean name="mensajesFallidosNegocio" class="es.minhap.plataformamensajeria.iop.business.SIMDLQMessageDispatcher" />

	<bean name="mensajesFallidosListener" parent="baseSIMMensajeListener">
		<property name="delegate" ref="mensajesFallidosNegocio" />
		<property name="defaultListenerMethod" value="dispatchMessage" />
	</bean>
	 -->
	<!-- 
	<bean name="mensajesFallidosMessageReceiver" class="es.map.sim.jms.receiver.SIMMessageReceiver">
		<property name="listener" ref="mensajesFallidosListener" />
		<property name="defaultQueueName" value="#{queueResolver.fallidosQueueName}"></property>
	</bean>
	 -->
	 
	<!-- <jms:listener-container acknowledge="transacted"
		transaction-manager="txJMSManager" connection-factory="amqConnectionFactory"
		concurrency="10" destination-type="queue" receive-timeout="100">
		<jms:listener ref="mensajesFallidosListener" destination="#{queueResolver.fallidosQueueName}" />
	</jms:listener-container> -->
</beans>
