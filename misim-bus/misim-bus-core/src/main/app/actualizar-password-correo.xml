<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
	<spring:beans>
		<spring:bean id="invocarActualizarPasswordCorreo" name="invocarActualizarPasswordCorreo" class="es.minhap.misim.components.InvocarActualizarPasswordCorreo" />
		<spring:bean id="inicializarActualizarPassword" name="inicializarActualizarPassword" class="es.minhap.misim.components.InicializarAplicacionCliente"/>
	</spring:beans>


	<flow name="FLW-ACTUALIZAR_PASSWORD" doc:name="FLW-ACTUALIZAR_PASSWORD" doc:description="Procesa una nueva Peticion de registro Movil">

		<!-- RECEPCION PETICION -->
		<vm:inbound-endpoint exchange-pattern="request-response" path="actualizar-password-correo" responseTimeout="120000" doc:name="VM" />

		<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Inicio peticion" />

		<!-- INICIALIZAR VARIABLES -->
		<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Inicializar variables" />
		<component doc:name="Inicializa variables">
			<spring-object bean="inicializarActualizarPassword" />
		</component>
		
		<set-property propertyName="${XML_PETICION}" value="#[groovy:misim.bus.common.util.XMLUtils.dom2xml(payload.soapMessage)]"	doc:name="Property XML_PETICION" />
		
		
		
		<!-- AUDITORIA -->
		<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Auditoria de la peticion recibida" /> 
			<component doc:name="Audita" >
			<spring-object bean="audit" />
		</component>
		
		<processor-chain>
			<logger level="INFO" doc:name="Logger" message="[FLOW - EnvioPeticion] - Preparacion de la dessecurizacion" />
			<logger level="INFO" doc:name="Logger" message="[FLOW - EnvioPeticion] - Antes del subfujo FLW-SEG-RES de dessecurizacion el payload es : #[payload]" />
			<flow-ref name="FLW-SEG-RES" doc:name="Securizar respuesta" />
			<logger level="INFO" doc:name="Logger" message="[FLOW - EnvioPeticion] - Flujo de ida securizado" />
			<logger level="INFO" doc:name="Logger" message="[FLOW - EnvioPeticion] - Despues del subfujo FLW-SEG-PET de securizacion el payload es : #[payload]" />
		</processor-chain>
		
		
<!-- desencriptar -->
		<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Desencriptar " />
		<processor-chain doc:name="Processor Chain">
			<component	doc:name="Encripta" >
				<spring-object bean="desencriptar" />
			</component>
		</processor-chain>


		<!-- INVOCACION DEL ENVIADOR -->
		
		<!-- INVOCACION DEL ENVIADOR -->
		<component doc:name="Invocar Actualizar Password Correo">
			<spring-object bean="invocarActualizarPasswordCorreo" />
		</component>
		
		
		<!-- ADAPTAR PROTOCOLO -->		
		<choice doc:name="Adaptar la respuesta"> 
			<when expression="#[message.outboundProperties['${TRANSFORMACION_RESPUESTA}'] == 'S']">
				<processor-chain>		
					<set-variable variableName="${XSL_SHEET}" value="#[message.outboundProperties['${XSL_RESPUESTA}']]" doc:name="Hoja XSL para transformar la respuesta" />	
							
					<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Adaptacion de la respuesta" />
					<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Antes del subfujo FLW-ACTUALIZAR_PASSWORD de adaptacion del protocolo el payload es : #[payload]" />
					<flow-ref name="FLW-MSG-ADP" doc:name="Adaptar protocolo hacia Actualizar Password" />
					<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Despues del subfujo FLW-ACTUALIZAR_PASSWORD de adaptacion del protocolo el payload es : #[payload]" />
				</processor-chain>
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - No se requiere de adaptacion de la respuesta" />
			</otherwise>
		</choice>
		
		<set-property propertyName="${XML_RESPUESTA}" value="#[groovy:misim.bus.common.util.XMLUtils.dom2xml(payload.soapMessage)]"  doc:name="Property XML_RESPUESTA" />
		
		<!-- ENCRIPTACION -->
		<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Comprobar si se requiere encriptacion para la auditoria" />
		<processor-chain doc:name="Processor Chain">
			<logger level="INFO" message="[FLOW - actualizarPasswordCorreo - Encriptacion requerida" doc:name="Logger" />
			<component	doc:name="Encripta" >
				<spring-object bean="encriptar" />
			</component>
		</processor-chain>
		
		<!-- ACTUALIZACION DE AUDITORIA -->
		<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Actualizacion de la auditoria" />
		<component doc:name="Actualizacon de Auditoria">
			<spring-object bean="updateAudit" />
		</component>
		
		<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Peticion procesada" />

		<!-- GESTION DE ERRORES -->

		<catch-exception-strategy doc:name="Catch Exception Strategy">

			<!-- GENERAR EL SOAP FAULT -->
        	<component	doc:name="Gestion de errores" >
				<spring-object bean="gestionErroresEnvioSim001" />
			</component>
			
			<set-property propertyName="${XML_FAULT}" value="#[groovy:misim.bus.common.util.XMLUtils.dom2xml(payload.soapMessage)]"  doc:name="Property XML_FAULT" />
					
			<!-- ACTUALIZACION DE AUDITORIA -->
        	<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Comprobar actualizacion de la auditoria" />
        	<choice doc:name="Encriptacion del error al Consumidor">
				<when expression="#[message.outboundProperties['${ID_AUDITORIA}'] != '']">
					<!-- ENCRIPTACION -->
					<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Comprobar si se requiere encriptacion para la auditoria" />
					<processor-chain doc:name="Processor Chain">
						<logger level="INFO" message="[FLOW - regristroMovil] - Encriptacion requerida" doc:name="Logger" />
						<component	doc:name="Encripta" >
							<spring-object bean="encriptar" />
						</component>
					</processor-chain>
					<processor-chain doc:name="Processor Chain">
						<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - Actualizacion de la auditoria fault" />
						<component doc:name="Actualizacion de auditoria Fault">
							<spring-object bean="updateAuditFault" />
						</component>
					</processor-chain>
				</when>
				<otherwise>
					<logger level="INFO" message="[FLOW - actualizarPasswordCorreo - Actualizacion de auditoria no requerida" doc:name="Logger" />
				</otherwise>
			</choice>	

			<logger level="INFO" doc:name="Logger" message="[FLOW - actualizarPasswordCorreo - SOAP Fault procesado" />

		</catch-exception-strategy>
	</flow>
</mule>
