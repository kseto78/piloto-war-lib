<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

	<spring:beans>
		<spring:bean id="inicializar" name="inicializar" class="es.minhap.misim.components.Inicializar"/>
		<spring:bean id="identificarAplicacion" name="identificarAplicacion" class="es.minhap.misim.components.IdentificarAplicacion"/>
		<spring:bean id="identificarProducto" name="identificarProducto" class="es.minhap.misim.components.IdentificarProducto"/>
		<spring:bean id="identificarProveedor" name="identificarProveedor" class="es.minhap.misim.components.IdentificarProveedor"/>
		<spring:bean id="identificarPropMensaje" name="identificarPropMensaje" class="es.minhap.misim.components.IdentificarPropiedadesMensaje"/>
		<spring:bean id="incluirIdentificadorMensaje" name="incluirIdentificadorMensaje" class="es.minhap.misim.components.IncluirIdentificadorMensaje"/>
		<spring:bean id="incluirIdentificadorMensajeOperador" name="incluirIdentificadorMensajeOperador" class="es.minhap.misim.components.IncluirIdentificadorMensajeOperador"/>
		
		<spring:bean id="encriptar" name="encriptar" class="es.minhap.misim.components.Encriptar"/>
		<spring:bean id="validarFirma" name="validarFirma" class="es.minhap.misim.components.ValidarFirma"/>
		<spring:bean id="firmar" name="firmar" class="es.minhap.misim.components.Firmar"/>
		<spring:bean id="encriptarProveedor" name="encriptarProveedor" class="es.minhap.misim.components.EncriptarProveedor"/>
		<spring:bean id="desencriptar" name="desencriptar" class="es.minhap.misim.components.Desencriptar"/>

		<spring:bean id="audit" name="audit" class="es.minhap.misim.components.Auditar"/>
		<spring:bean id="updateAudit" name="updateAudit" class="es.minhap.misim.components.ActualizarAuditoria"/>
		<spring:bean id="updateAuditFault" name="updateAuditFault" class="es.minhap.misim.components.ActualizarAuditoriaFault"/>
		
		<spring:bean id="invocarEmisor" name="invocarEmisor" class="es.minhap.misim.components.InvocarEmisor"/>
		<spring:bean id="invocarEmisorHTTP" name="invocarEmisorHTTP" class="es.minhap.misim.components.InvocarEmisorHTTP"/>
		<spring:bean id="invocarEmisorPush" name="invocarEmisorPush" class="es.minhap.misim.components.InvocarEmisorPush"/>
		
		<spring:bean id="gestionErrores" name="gestionErrores" class="es.minhap.misim.components.GestionErroresEnvioSMS"/>
	</spring:beans>

	<flow name="FLW-RCP-ENV" doc:name="FLW-RCP-ENV" doc:description="Procesa un nuevo Envío">
			
		<!-- RECEPCIÓN PETICIÓN POR PARTE DE SIM (SENDMAIL O REFRESSH)-->
		<vm:inbound-endpoint exchange-pattern="request-response" path="envio-sim" responseTimeout="120000" doc:name="VM"/>
			
		<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
		<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
		<logger level="INFO" doc:name="Logger" message="Petición SOAP recibida de SIM: #[groovy:misim.bus.common.util.XMLUtils.dom2xml(payload.soapMessage)]" />
		<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
		<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
		<logger level="INFO" doc:name="Logger" message="Inicio envio SIM a MISIM" />
		
		<!-- INICIALIZAR VARIABLES -->
		<logger level="INFO" doc:name="Logger" message="Inicializar variables" />
		<component	doc:name="Inicializa variables" >
			<spring-object bean="inicializar" />
		</component>

		<set-property propertyName="${XML_PETICION}" value="#[groovy:misim.bus.common.util.XMLUtils.dom2xml(payload.soapMessage)]"  doc:name="Property XML_PETICION" />
		
		<!-- INDENTIFICAR APLICACION -->
		<logger level="INFO" doc:name="Logger" message="Indentificación de la aplicacion" />
		<component	doc:name="Recupera la configuración del cliente" >
			<spring-object bean="identificarAplicacion" />
		</component>
		
		<!-- LOGGER APLICACION -->
		<logger level="INFO" doc:name="Logger" message="APLICACION #[message.outboundProperties['${ID_APLICACION}']]" />
			
		<!-- INDENTIFICAR DEL PRODUCTO -->
		<logger level="INFO" doc:name="Logger" message="Indentificación del producto" />
		<component	doc:name="Recupera la configuración del producto" >
			<spring-object bean="identificarProducto" />
		</component>
		
		<!-- LOGGER PRODUCTO -->
		<logger level="INFO" doc:name="Logger" message="PRODUCTO #[message.outboundProperties['${ID_PRODUCTO}']]" />
		
		<!-- INDENTIFICAR DEL PROVEEDOR -->
		<logger level="INFO" doc:name="Logger" message="Indentificación del proveedor" />
		<component	doc:name="Recupera la configuración del proveedor" >
			<spring-object bean="identificarProveedor" />
		</component>

		<!-- LOGGER PROVEEDOR -->
		<logger level="INFO" doc:name="Logger" message="PROVEEDOR #[message.outboundProperties['${ID_PROVEEDOR}']]" />

		<!-- ENCRIPTACIÓN -->
		<logger level="INFO" doc:name="Logger" message="Encriptación para la auditoría" />
		<processor-chain doc:name="Processor Chain">
			<component	doc:name="Encripta" >
				<spring-object bean="encriptar" />
			</component>
		</processor-chain>
		
		<!-- AUDITORÍA -->
		<logger level="INFO" doc:name="Logger" message="Auditoría de la petición recibida" />
		<component	doc:name="Audita" >
			<spring-object bean="audit" />
		</component>
		
		<!-- ADAPTAR PETICIÓN -->
		<choice doc:name="Adaptar la petición"> 
			<when expression="#[message.outboundProperties['${TRANSFORMACION_PETICION}'] == 'S']">
				<processor-chain>
					<set-variable variableName="${XSL_SHEET}" value="#[message.outboundProperties['${XSL_PETICION}']]" doc:name="Hoja XSL para transformar el payload" />
					
					<logger level="INFO" doc:name="Logger" message="Adaptación de la petición" />
					<logger level="INFO" doc:name="Logger" message="Antes del subfujo FLW-MSG-ADP de adaptación del protocolo el payload es : #[payload]" />
					<flow-ref name="FLW-MSG-ADP" doc:name="Adaptar protocolo hacia Emisor" />
					<logger level="INFO" doc:name="Logger" message="Después del subfujo FLW-MSG-ADP de adaptación del protocolo el payload es : #[payload]" />
				</processor-chain>
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" message="No se requiere de adaptacion de la peticion" />
			</otherwise>
		</choice>
		
		<!-- SECURIZACIÓN PETICIÓN-->
		<logger level="INFO" doc:name="Logger" message="Preparación de la securización" />
		<logger level="INFO" doc:name="Logger" message="Antes del subfujo FLW-SEG-PET de securización el payload es : #[payload]" />
		<flow-ref name="FLW-SEG-PET" doc:name="Securizar petición" />
		<logger level="INFO" doc:name="Logger" message="Fludo de ida securizado" />
		<logger level="INFO" doc:name="Logger" message="Después del subfujo FLW-SEG-PET de securización el payload es : #[payload]" />
		
		<!-- INVOCACIÓN AL EMISOR -->
		<logger level="INFO" doc:name="Logger" message="Invocación del emisor" />
		
		<logger level="INFO" doc:name="Logger" message="Comunicación #[message.outboundProperties['${ID_COMUNICACION}']]" />
		
		<choice doc:name="Endpoint">
			<when expression="#[message.outboundProperties['${ENDPOINT_URL_SIM}'] != '']"> 
				<logger level="INFO" doc:name="Logger" message="Endpoint SIM #[message.outboundProperties['${ENDPOINT_URL_SIM}']]" />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" message="Endpoint #[message.outboundProperties['${ENDPOINT_URL}']]" />
			</otherwise>
		</choice>
		
		<choice doc:name="Protocolo de comunicacion"> 

			<when expression="#[message.outboundProperties['${ID_COMUNICACION}'] == '${WS}']">
				<processor-chain doc:name="Processor Chain">
					<logger level="INFO" doc:name="Logger" message="Invocacion Web Service" />
					<component	doc:name="Invocar via WS" >
						<spring-object bean="invocarEmisor" />
					</component>
				</processor-chain>
			</when>
			<when expression="#[message.outboundProperties['${ID_COMUNICACION}'] == '${HTTP}']">
				<processor-chain doc:name="Processor Chain">
					<logger level="INFO" doc:name="Logger" message="Invocacion HTTP" />
					<component	doc:name="Invocar via HTTP" >
						<spring-object bean="invocarEmisorHTTP" />
					</component>
				</processor-chain>
			</when>
			<when expression="#[message.outboundProperties['${ID_COMUNICACION}'] == '${PUSH}']">
				<processor-chain doc:name="Processor Chain">
					<logger level="INFO" doc:name="Logger" message="Invocacion Push" />
					<component	doc:name="Invocar via Push" >
						<spring-object bean="invocarEmisorPush" />
					</component>
				</processor-chain>
			</when>
			<otherwise>
				<processor-chain doc:name="Processor Chain">
					<logger level="INFO" doc:name="Logger" message="Invocacion por defecto" />
					<component	doc:name="Invocar via WS" >
						<spring-object bean="invocarEmisor" />
					</component>
				</processor-chain>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" message="Emisor invocado" />
		
		<!-- COMPROBAR SOAP_FAULT -->
		<logger level="INFO" doc:name="Logger" message="Comprobar SOAP Fault" />
		<choice doc:name="Respuesta o SOAP Fault">
			<when expression="#[message.outboundProperties['${SOAP_FAULT}']]">
				<processor-chain>
					<logger level="INFO" doc:name="Logger" message="SOAP Fault recibido" />
					<choice doc:name="Comprobar la transformacion de la respuesta"> 
						<when expression="#[message.outboundProperties['${TRANSFORMACION_RESPUESTA}'] == 'S']">
							<set-variable variableName="${XSL_SHEET}" value="#[message.outboundProperties['${XSL_SOAP_FAULT}']]" doc:name="Hoja XSL para transformar el error SOAP" />
						</when>
						<otherwise>
							<logger level="INFO" doc:name="Logger" message="No se requiere de adaptacion de la peticion" />
						</otherwise>
					</choice>
				</processor-chain>
			</when>
			<otherwise>
				<processor-chain>
					<logger level="INFO" doc:name="Logger" message="Respuesta recibida" />
					<choice doc:name="Comprobar la transformacion de la respuesta"> 
						<when expression="#[message.outboundProperties['${TRANSFORMACION_RESPUESTA}'] == 'S']">
							<set-variable variableName="${XSL_SHEET}" value="#[message.outboundProperties['${XSL_RESPUESTA}']]" doc:name="Hoja XSL para transformar la respuesta" />
						</when>
						<otherwise>
							<logger level="INFO" doc:name="Logger" message="No se requiere de adaptacion de la peticion" />
						</otherwise>
					</choice>
				</processor-chain>
			</otherwise>
		</choice>
		
		<!-- DES-SECURIZAR RESPUESTA -->
		<processor-chain>
			<logger level="INFO" doc:name="Logger" message="Preparación de la dessecurización" />
			<logger level="INFO" doc:name="Logger" message="Antes del subfujo FLW-SEG-RES de dessecurización el payload es : #[payload]" />
			<flow-ref name="FLW-SEG-RES" doc:name="Securizar respuesta" />
			<logger level="INFO" doc:name="Logger" message="Fludo de ida securizado" />
			<logger level="INFO" doc:name="Logger" message="Después del subfujo FLW-SEG-PET de securización el payload es : #[payload]" />
		</processor-chain>
		
		<!-- ADAPTAR PROTOCOLO -->		
		<choice doc:name="Adaptar la respuesta"> 
			<when expression="#[message.outboundProperties['${TRANSFORMACION_RESPUESTA}'] == 'S']">
				<processor-chain>					
					<logger level="INFO" doc:name="Logger" message="Adaptación de la respuesta" />
					<logger level="INFO" doc:name="Logger" message="Antes del subfujo FLW-MSG-ADP de adaptación del protocolo el payload es : #[payload]" />
					<flow-ref name="FLW-MSG-ADP" doc:name="Adaptar protocolo hacia MISIM" />
					<logger level="INFO" doc:name="Logger" message="Después del subfujo FLW-MSG-ADP de adaptación del protocolo el payload es : #[payload]" />
				</processor-chain>
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" message="No se requiere de adaptacion de la respuesta" />
			</otherwise>
		</choice>
		
		<!-- INDENTIFICAR INCLUIR ID SMS -->
		<logger level="INFO" doc:name="Logger" message="Indentificación propiedades mensaje" />
		<component	doc:name="incluir id mensaje" >
			<spring-object bean="incluirIdentificadorMensaje" />
		</component>
		
		<set-property propertyName="${XML_RESPUESTA}" value="#[groovy:misim.bus.common.util.XMLUtils.dom2xml(payload.soapMessage)]"  doc:name="Property XML_RESPUESTA" />
		
		<!-- ENCRIPTACIÓN -->
		<logger level="INFO" doc:name="Logger" message="Comprobar si se requiere encriptación para la auditoría" />
		<processor-chain doc:name="Processor Chain">
			<logger level="INFO" message="Encriptación requerida" doc:name="Logger" />
			<component	doc:name="Encripta" >
				<spring-object bean="encriptar" />
			</component>
		</processor-chain>
		
		<!-- ACTUALIZACIÓN DE AUDITORÍA -->
		<logger level="INFO" doc:name="Logger" message="Actualización de la auditoría" />
		<component doc:name="Actualizacón de Auditoría">
			<spring-object bean="updateAudit" />
		</component>

		<logger level="INFO" doc:name="Logger" message="Petición procesada" />
		<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
		<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
		<logger level="INFO" doc:name="Logger" message="Respuesta SOAP devuelta: #[groovy:misim.bus.common.util.XMLUtils.dom2xml(payload.soapMessage)]" />
		<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
		<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
        
        
        
        <!-- GESTIÓN DE ERRORES -->
        
        
        
        <catch-exception-strategy doc:name="Catch Exception Strategy">
        	
        	<!-- GENERAR EL SOAP FAULT -->
        	<logger level="INFO" doc:name="Logger" message="Tratamiento del error" />
        	<component	doc:name="Gestión de errores" >
				<spring-object bean="gestionErrores" />
			</component>
			
			<set-property propertyName="${XML_FAULT}" value="#[groovy:misim.bus.common.util.XMLUtils.dom2xml(payload.soapMessage)]"  doc:name="Property XML_FAULT" />
					
			<!-- ACTUALIZACIÓN DE AUDITORÍA -->
        	<logger level="INFO" doc:name="Logger" message="Comprobar actualización de la auditoría" />
        	<choice doc:name="Encriptación del error al Consumidor">
				<when expression="#[message.outboundProperties['${ID_AUDITORIA}'] != '']">
					<!-- ENCRIPTACIÓN -->
					<logger level="INFO" doc:name="Logger" message="Comprobar si se requiere encriptación para la auditoría" />
					<processor-chain doc:name="Processor Chain">
						<logger level="INFO" message="Encriptación requerida" doc:name="Logger" />
						<component	doc:name="Encripta" >
							<spring-object bean="encriptar" />
						</component>
					</processor-chain>
					<processor-chain doc:name="Processor Chain">
						<logger level="INFO" doc:name="Logger" message="Actualización de la auditoría fault" />
						<component doc:name="Actualización de auditoría Fault">
							<spring-object bean="updateAuditFault" />
						</component>
					</processor-chain>
				</when>
				<otherwise>
					<logger level="INFO" message="Actualización de auditoría no requerida" doc:name="Logger" />
				</otherwise>
			</choice>	
	
			<logger level="INFO" doc:name="Logger" message="SOAP Fault procesado" />
			<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
			<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
			<logger level="INFO" doc:name="Logger" message="SOAP Fault devuelta: #[groovy:misim.bus.common.util.XMLUtils.dom2xml(payload.soapMessage)]" />
			<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
			<logger level="INFO" doc:name="Logger" message="------------------------------------------------------------------------------------------" />
		
        </catch-exception-strategy>
        
	</flow>
</mule>
